version: 2
jobs:
  lint:
    working_directory: ~/ilanddev/javascript-sdk
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: buildpack-deps:focal
    steps:
      - checkout
      - run: apt-get -y install ca-certificates
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          name: Install nvm
          working_directory: ~/ilanddev/javascript-sdk
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
      - run:
          name: Set node to version required by application for future circleci steps
          command: |
            nvm install 8.9.2
            nvm alias default 8.9.2
      - restore_cache:
          keys:
            - v1-dep-{{ .Branch }}-
            - v1-dep-master-
            - v1-dep-
      - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
      - run: export PATH="~/ilanddev/javascript-sdk/node_modules/.bin:$PATH"
      - run: npm run lint
  build:
    working_directory: ~/ilanddev/javascript-sdk
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: buildpack-deps:focal
    steps:
    - checkout
    - run: apt-get -y install ca-certificates
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        name: Install nvm
        working_directory: ~/ilanddev/javascript-sdk
        command: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
          echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
          echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
    - run:
        name: Set node to version required by application for future circleci steps
        working_directory: ~/ilanddev/javascript-sdk
        command: |
          nvm install 8.9.2
          nvm alias default 8.9.2
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
    - run: export PATH="~/ilanddev/javascript-sdk/node_modules/.bin:$PATH"
    - run: npm install
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ./node_modules
    - run: npm test
    - run: bash <(curl -s https://codecov.io/bash)
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: coverage
    - store_artifacts:
        path: /tmp/circleci-test-results
  deploy-docs:
    working_directory: ~/ilanddev/javascript-sdk
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: buildpack-deps:focal
      command: /sbin/init
    steps:
      - checkout
      - run: apt-get -y install ca-certificates
      - add_ssh_keys:
          fingerprints:
            - "20:eb:b0:26:6f:3d:ed:a6:b2:16:f4:f6:f2:cf:60:2a"
      - run:
          name: Install nvm
          working_directory: ~/ilanddev/javascript-sdk
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
            - run:
                name: Set node to version required by application for future circleci steps
                command: |
                  nvm install 8.9.2
                  nvm alias default 8.9.2
      - restore_cache:
          keys:
          - v1-dep-{{ .Branch }}-
          - v1-dep-master-
          - v1-dep-
      - run: export PATH="~/ilanddev/javascript-sdk/node_modules/.bin:$PATH"
      - run: git config --global user.email "csnyder@iland.com"
      - run: git config --global user.name "CircleCI"
      - run: npm run publish:docs
workflows:
  version: 2
  lint_build_and_deploy_docs:
    jobs:
      - lint:
          filters:
            branches:
              ignore: gh-pages
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy-docs:
          requires:
            - build
          filters:
            branches:
              only: master
