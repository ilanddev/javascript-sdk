import { SupportTicketCreateRequestJson } from './__json__/support-ticket-create-request-json';
import { SeverityType } from './__json__/severity-type';
import { ContactType } from './__json__/contact-type';

/**
 * Request to create a support ticket.
 */
/* istanbul ignore next: autogenerated */
export class SupportTicketCreateRequest {

  private readonly _json: SupportTicketCreateRequestJson;

  constructor(supportTicketCreateRequest: SupportTicketCreateRequest);
  constructor(supportTicketCreateRequestJson: SupportTicketCreateRequestJson);
  constructor(summary: string, description: string, ccEmailAddresses: Array<string>, ccEmailsEnabled: boolean,
              regardingId: number, serviceId: number, categoryId: number, severity: SeverityType,
              contactType: ContactType, phoneNumber: string, phoneNumberExt: string);
  constructor(firstParam: string | SupportTicketCreateRequest | SupportTicketCreateRequestJson, description?: string,
              ccEmailAddresses?: Array<string>, ccEmailsEnabled?: boolean, regardingId?: number, serviceId?: number,
              categoryId?: number, severity?: SeverityType, contactType?: ContactType, phoneNumber?: string,
              phoneNumberExt?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        summary: firstParam,
        description: description,
        cc_email_addresses: ccEmailAddresses,
        cc_emails_enabled: ccEmailsEnabled,
        regarding_id: regardingId,
        service_id: serviceId,
        category_id: categoryId,
        severity: severity,
        contact_type: contactType,
        phone_number: phoneNumber,
        phone_number_ext: phoneNumberExt
      } as SupportTicketCreateRequestJson;
    } else if (firstParam instanceof SupportTicketCreateRequest) {
            // Copy constructor
      this._json = (firstParam as SupportTicketCreateRequest).json;
    } else {
            // Json or empty constructor
      this._json = (firstParam || {}) as SupportTicketCreateRequestJson;
    }
  }

    /**
     * Get summary.
     * @returns {string}
     */
  get summary(): string {
    return this._json.summary;
  }

    /**
     * Get description.
     * @returns {string}
     */
  get description(): string {
    return this._json.description;
  }

    /**
     * Get cc email addresses.
     * @returns {Array<string>}
     */
  get ccEmailAddresses(): Array<string> {
    return this._json.cc_email_addresses;
  }

    /**
     * Get cc emails enabled.
     * @returns {boolean}
     */
  get ccEmailsEnabled(): boolean {
    return this._json.cc_emails_enabled;
  }

    /**
     * Get regarding id.
     * @returns {number}
     */
  get regardingId(): number {
    return this._json.regarding_id;
  }

    /**
     * Get service id.
     * @returns {number}
     */
  get serviceId(): number {
    return this._json.service_id;
  }

    /**
     * Get category id.
     * @returns {number}
     */
  get categoryId(): number {
    return this._json.category_id;
  }

    /**
     * Get severity.
     * @returns {SeverityType}
     */
  get severity(): SeverityType {
    return this._json.severity;
  }

    /**
     * Get contact type.
     * @returns {ContactType}
     */
  get contactType(): ContactType {
    return this._json.contact_type;
  }

    /**
     * Get phone number.
     * @returns {string}
     */
  get phoneNumber(): string {
    return this._json.phone_number;
  }

    /**
     * Get phone number ext.
     * @returns {string}
     */
  get phoneNumberExt(): string {
    return this._json.phone_number_ext;
  }

    /**
     * Get the json representation of this class.
     * @returns {SupportTicketCreateRequestJson}
     */
  get json(): SupportTicketCreateRequestJson {
    return Object.assign({}, this._json);
  }

    /**
     * Get the string representation of this class.
     * @returns {string}
     */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
