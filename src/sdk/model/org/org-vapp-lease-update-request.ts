import { OrgVappLeaseUpdateRequestJson } from './__json__/org-vapp-lease-update-request-json';

/**
 * Org vApp Lease Update Request.
 */
/* istanbul ignore next: autogenerated */
export class OrgVappLeaseUpdateRequest {

  private readonly _json: OrgVappLeaseUpdateRequestJson;

  constructor(orgVappLeaseUpdateRequest: OrgVappLeaseUpdateRequest);
  constructor(orgVappLeaseUpdateRequestJson: OrgVappLeaseUpdateRequestJson);
  constructor(vappDeleteOnStorageExpire: boolean, vappMaxRuntimeLease: number, vappMaxStorageLease: number);
  constructor(firstParam: boolean | OrgVappLeaseUpdateRequest | OrgVappLeaseUpdateRequestJson,
              vappMaxRuntimeLease?: number, vappMaxStorageLease?: number) {
    if (typeof firstParam === 'boolean') {
      // Parameters constructor
      this._json = {
        vapp_delete_on_storage_expire: firstParam,
        vapp_max_runtime_lease: vappMaxRuntimeLease,
        vapp_max_storage_lease: vappMaxStorageLease
      } as OrgVappLeaseUpdateRequestJson;
    } else if (firstParam instanceof OrgVappLeaseUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as OrgVappLeaseUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as OrgVappLeaseUpdateRequestJson;
    }
  }

  /**
   * Get vapp delete on storage expire.
   * @returns {boolean}
   */
  get vappDeleteOnStorageExpire(): boolean {
    return this._json.vapp_delete_on_storage_expire;
  }

  /**
   * Get vapp max runtime lease.
   * @returns {number}
   */
  get vappMaxRuntimeLease(): number {
    return this._json.vapp_max_runtime_lease;
  }

  /**
   * Get vapp max storage lease.
   * @returns {number}
   */
  get vappMaxStorageLease(): number {
    return this._json.vapp_max_storage_lease;
  }

  /**
   * Get the json representation of this class.
   * @returns {OrgVappLeaseUpdateRequestJson}
   */
  get json(): OrgVappLeaseUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
