import { RecoveryGroupDescriptorJson } from './__json__/recovery-group-descriptor-json';
import { RecoveryGroupType } from './__json__/recovery-group-type';

/**
 * Recovery group descriptor request.
 */
/* istanbul ignore next: autogenerated */
export class RecoveryGroupDescriptorRequest {

  private readonly _json: RecoveryGroupDescriptorJson;

  constructor(recoveryGroupDescriptorRequest: RecoveryGroupDescriptorRequest);
  constructor(recoveryGroupDescriptorRequestJson: RecoveryGroupDescriptorJson);
  constructor(name: string, uuid: string, type: RecoveryGroupType, orderIndex: number);
  constructor(firstParam: string | RecoveryGroupDescriptorRequest | RecoveryGroupDescriptorJson,
              uuid?: string, type?: RecoveryGroupType, orderIndex?: number) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        name: firstParam,
        uuid: uuid,
        type: type,
        order_index: orderIndex
      } as RecoveryGroupDescriptorJson;
    } else if (firstParam instanceof RecoveryGroupDescriptorRequest) {
      // Copy constructor
      this._json = (firstParam as RecoveryGroupDescriptorRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as RecoveryGroupDescriptorJson;
    }
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get uuid.
   * @returns {string}
   */
  get uuid(): string {
    return this._json.uuid;
  }

  /**
   * Get type.
   * @returns {RecoveryGroupType}
   */
  get type(): RecoveryGroupType {
    return this._json.type;
  }

  /**
   * Get order index.
   * @returns {number}
   */
  get orderIndex(): number {
    return this._json.order_index;
  }

  /**
   * Get the json representation of this class.
   * @returns {RecoveryGroupDescriptorJson}
   */
  get json(): RecoveryGroupDescriptorJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
