"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var recovery_group_descriptor_1 = require("./recovery-group-descriptor");
var iland_1 = require("../../../iland");
var task_1 = require("../../task/task");
var http_1 = require("../../../service/http/http");
var disaster_recovery_runbook_task_details_1 = require("./disaster-recovery-runbook-task-details");
/**
 * Disaster recovery runbook
 */
/* istanbul ignore next: autogenerated */
var DisasterRecoveryRunbook = (function () {
    function DisasterRecoveryRunbook(_json) {
        this._json = _json;
    }
    /**
     * Gets an DisasterRecoveryRunbook by UUID.
     * @param uuid DisasterRecoveryRunbook UUID
     * @returns {Promise<DisasterRecoveryRunbook>} promise that resolves with the DisasterRecoveryRunbook
     */
    DisasterRecoveryRunbook.getDisasterRecoveryRunbook = function (uuid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().get("/disaster-recovery-runbooks/" + uuid).then(function (response) {
                        var json = response.data;
                        return new DisasterRecoveryRunbook(json);
                    })];
            });
        });
    };
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "locationId", {
        /**
         * Get location id.
         * @returns {string}
         */
        get: function () {
            return this._json.location_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "orgUuid", {
        /**
         * Get org uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.org_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "description", {
        /**
         * Get description.
         * @returns {string}
         */
        get: function () {
            return this._json.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "createdDate", {
        /**
         * Get created date.
         * @returns {number}
         */
        get: function () {
            return this._json.created_date;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "lastTest", {
        /**
         * Get last test.
         * @returns {number}
         */
        get: function () {
            return this._json.last_test;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "recoveryGroups", {
        /**
         * Get recovery groups.
         * @returns {Array<RecoveryGroupDescriptor>}
         */
        get: function () {
            return this._json.recovery_groups.map(function (group) {
                return new recovery_group_descriptor_1.RecoveryGroupDescriptor(group);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "uuid", {
        /**
         * Get uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "name", {
        /**
         * Get name.
         * @returns {string}
         */
        get: function () {
            return this._json.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "deleted", {
        /**
         * Get deleted.
         * @returns {boolean}
         */
        get: function () {
            return this._json.deleted;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "deletedDate", {
        /**
         * Get deleted date.
         * @returns {number}
         */
        get: function () {
            return this._json.deleted_date;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "updatedDate", {
        /**
         * Get updated date.
         * @returns {number}
         */
        get: function () {
            return this._json.updated_date;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "companyId", {
        /**
         * Get company id.
         * @returns {string}
         */
        get: function () {
            return this._json.company_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisasterRecoveryRunbook.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {DisasterRecoveryRunbookJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    DisasterRecoveryRunbook.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    /**
     * Refreshes the DisasterRecoveryRunbook data by retrieving it from the API again.
     * @returns {Promise<DisasterRecoveryRunbook>} promise that resolves with this object
     */
    DisasterRecoveryRunbook.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().get("/disaster-recovery-runbooks/" + this.uuid).then(function (response) {
                        _this._json = response.data;
                        return _this;
                    })];
            });
        });
    };
    /**
     * Deletes a DisasterRecoveryRunbook.
     * @returns {Promise<any>} a promise that resolves when the operation completes
     */
    DisasterRecoveryRunbook.prototype.delete = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().delete("/disaster-recovery-runbooks/" + this.uuid)];
            });
        });
    };
    /**
     * Updates a disaster recovery runbook.
     * @param {DisasterRecoveryRunbookUpdateRequest} request the update request
     * @returns {Promise<DisasterRecoveryRunbook>} a promise that resolves with the updated runbook.
     */
    DisasterRecoveryRunbook.prototype.update = function (request) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().put("/disaster-recovery-runbooks/" + this.uuid, request.json).then(function (response) {
                        var json = response.data;
                        return new DisasterRecoveryRunbook(json);
                    })];
            });
        });
    };
    /**
     * Abort a disaster recovery runbook.
     * @param {DisasterRecoveryRunbookAbortRequest} abortRequest
     * @returns {Promise<Task>}
     */
    DisasterRecoveryRunbook.prototype.abort = function (abortRequest) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().post("/disaster-recovery-runbooks/" + this.uuid + "/actions/abort", abortRequest.json)
                        .then(function (response) {
                        var json = response.data;
                        return new task_1.Task(json);
                    })];
            });
        });
    };
    /**
     * Execute a runbook.
     * @param {DisasterRecoveryRunbookExecuteRequest} executeRequest
     * @returns {Promise<any>}
     */
    DisasterRecoveryRunbook.prototype.execute = function (executeRequest) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().post("/disaster-recovery-runbooks/" + this.uuid + "/actions/execute", executeRequest.json)
                        .then(function (response) {
                        var json = response.data;
                        return new task_1.Task(json);
                    })];
            });
        });
    };
    /**
     * Finalize runbook execution.
     * @param {DisasterRecoveryRunbookFinalizeExecutionRequest} finalizeExecutionRequest
     * @returns {Promise<Task>}
     */
    DisasterRecoveryRunbook.prototype.finalizeExecution = function (finalizeExecutionRequest) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp()
                        .post("/disaster-recovery-runbooks/" + this.uuid + "/actions/finalize", finalizeExecutionRequest.json)
                        .then(function (response) {
                        var json = response.data;
                        return new task_1.Task(json);
                    })];
            });
        });
    };
    /**
     * Run a runbook test.
     * @returns {Promise<Task>}
     */
    DisasterRecoveryRunbook.prototype.test = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().post("/disaster-recovery-runbooks/" + this.uuid + "/actions/test", {})
                        .then(function (response) {
                        var json = response.data;
                        return new task_1.Task(json);
                    })];
            });
        });
    };
    /**
     * Get report href.
     * @param {string} reportUuid
     * @param {string} filename
     * @returns {Observable<string>}
     */
    DisasterRecoveryRunbook.prototype.getReportHref = function (reportUuid, filename) {
        var href = iland_1.Iland.baseUrl + "/disaster-recovery-runbooks/" + this.uuid + "/reports/" + reportUuid + "/export?accept=" +
            encodeURIComponent(http_1.Http.versionMime('application/pdf'));
        if (filename) {
            href = href + '&filename=' + encodeURIComponent(filename);
        }
        var observable = iland_1.Iland.getAuthProvider().getTokenObservable();
        return observable.map(function (token) { return href + "&oauth_token=" + token; });
    };
    /**
     * Get runbook task details
     * @param {string} taskUuid
     * @returns {Promise<DisasterRecoveryRunbookReportDetails>}
     */
    DisasterRecoveryRunbook.prototype.getRunbookTaskDetails = function (taskUuid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, iland_1.Iland.getHttp().get("/disaster-recovery-runbooks/" + this.uuid + "/runbook-task-details/" + taskUuid)
                        .then(function (response) {
                        var json = response.data;
                        return new disaster_recovery_runbook_task_details_1.DisasterRecoveryRunbookReportDetails(json);
                    })];
            });
        });
    };
    return DisasterRecoveryRunbook;
}());
exports.DisasterRecoveryRunbook = DisasterRecoveryRunbook;
