import { DisasterRecoveryRunbookReportDetailsJson } from './__json__/disaster-recovery-runbook-task-details-json';
import { StatusJson } from './__json__/status-json';
import { RecoveryGroupReportDetails } from './recovery-group-report-detail';

/**
 * Disaster recovery runbook report details.
 */
/* istanbul ignore next: autogenerated */
export class DisasterRecoveryRunbookReportDetails {

  constructor(private _json: DisasterRecoveryRunbookReportDetailsJson) {
  }

  /**
   * Get location id.
   * @returns {string}
   */
  get locationId(): string {
    return this._json.location_id;
  }

  /**
   * Get task uuid.
   * @returns {string}
   */
  get taskUuid(): string {
    return this._json.task_uuid;
  }

  /**
   * Get type.
   * @returns {string}
   */
  get type(): string {
    return this._json.type;
  }

  /**
   * Get task complete.
   * @returns {number}
   */
  get taskComplete(): number {
    return this._json.task_complete;
  }

  /**
   * Get status.
   * @returns {StatusJson}
   */
  get status(): StatusJson {
    return this._json.status;
  }

  /**
   * Get data.
   * @returns {{ [key: string]: RecoveryGroupReportDetails }}
   */
  get data(): { [key: string]: RecoveryGroupReportDetails } {
    const data: { [key: string]: RecoveryGroupReportDetails } = {};
    for (const reportDetailsKey in this._json.data) {
      data[reportDetailsKey] = new RecoveryGroupReportDetails(this._json.data[reportDetailsKey]);
    }
    return data;
  }

  /**
   * Get start time.
   * @returns {string}
   */
  get startTime(): string {
    return this._json.start_time;
  }

  /**
   * Get end time.
   * @returns {string}
   */
  get endTime(): string {
    return this._json.end_time;
  }

  /**
   * Get protected vm count.
   * @returns {number}
   */
  get protectedVmCount(): number {
    return this._json.protected_vm_count;
  }

  /**
   * Get the json representation of this class.
   * @returns {DisasterRecoveryRunbookReportDetailsJson}
   */
  get json(): DisasterRecoveryRunbookReportDetailsJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
