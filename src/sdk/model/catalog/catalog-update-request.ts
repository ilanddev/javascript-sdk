import { CatalogUpdateRequestJson } from './__json__/catalog-update-request-json';

/**
 * Request to update a catalog
 */
/* istanbul ignore next: autogenerated */
export class CatalogUpdateRequest {

  private readonly _json: CatalogUpdateRequestJson;

  constructor(catalogUpdateRequest: CatalogUpdateRequest);
  constructor(catalogUpdateRequestJson: CatalogUpdateRequestJson);
  constructor(description: string, uuid: string, name: string, deleted: boolean, deletedDate: number,
              updatedDate: number);
  constructor(firstParam: string | CatalogUpdateRequest | CatalogUpdateRequestJson, uuid?: string, name?: string,
              deleted?: boolean, deletedDate?: number, updatedDate?: number) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        description: firstParam,
        uuid: uuid,
        name: name,
        deleted: deleted,
        deleted_date: deletedDate,
        updated_date: updatedDate
      } as CatalogUpdateRequestJson;
    } else if (firstParam instanceof CatalogUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as CatalogUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as CatalogUpdateRequestJson;
    }
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get uuid.
   * @returns {string}
   */
  get uuid(): string {
    return this._json.uuid;
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get deleted.
   * @returns {boolean}
   */
  get deleted(): boolean {
    return this._json.deleted;
  }

  /**
   * Get deleted date.
   * @returns {number}
   */
  get deletedDate(): number {
    return this._json.deleted_date;
  }

  /**
   * Get updated date.
   * @returns {number}
   */
  get updatedDate(): number {
    return this._json.updated_date;
  }

  /**
   * Get the json representation of this class.
   * @returns {CatalogUpdateRequestJson}
   */
  get json(): CatalogUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
