import { InboxMarkAllAsReadRequestJson } from './__json__/inbox-mark-all-as-read-request-json';
import { MessageFolder } from './__json__/message-folder';

/**
 * Inbox Mark All As Read Request.
 */
/* istanbul ignore next: autogenerated */
export class InboxMarkAllAsReadRequest {

  private readonly _json: InboxMarkAllAsReadRequestJson;

  constructor(inboxMarkAllAsReadRequest: InboxMarkAllAsReadRequest);
  constructor(inboxMarkAllAsReadRequestJson: InboxMarkAllAsReadRequestJson);
  constructor(folder: MessageFolder);
  constructor(firstParam: MessageFolder | InboxMarkAllAsReadRequest | InboxMarkAllAsReadRequestJson) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        folder: firstParam
      } as InboxMarkAllAsReadRequestJson;
    } else if (firstParam instanceof InboxMarkAllAsReadRequest) {
      // Copy constructor
      this._json = (firstParam as InboxMarkAllAsReadRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as InboxMarkAllAsReadRequestJson;
    }
  }

  /**
   * Get folder.
   * @returns {MessageFolder}
   */
  get folder(): MessageFolder {
    return this._json.folder;
  }

  /**
   * Get the json representation of this class.
   * @returns {InboxMarkAllAsReadRequestJson}
   */
  get json(): InboxMarkAllAsReadRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
