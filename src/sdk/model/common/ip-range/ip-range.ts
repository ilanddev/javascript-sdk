import { IpRangeJson } from './__json__/ip-range-json';

/**
 * IP Range.
 */
/* istanbul ignore next: autogenerated */
export class IpRange {

  private readonly _json: IpRangeJson;

  constructor(ipRange: IpRange);
  constructor(ipRangeJson: IpRangeJson);
  constructor(start: string, end: string);
  constructor(firstParam: string | IpRange | IpRangeJson, end?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        start: firstParam,
        end: end
      } as IpRangeJson;
    } else if (firstParam instanceof IpRange) {
      // Copy constructor
      this._json = (firstParam as IpRange).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as IpRangeJson;
    }
  }

  /**
   * Get start.
   * @returns {string}
   */
  get start(): string {
    return this._json.start;
  }

  /**
   * Get end.
   * @returns {string}
   */
  get end(): string {
    return this._json.end;
  }

  /**
   * Get the json representation of this class.
   * @returns {IpRangeJson}
   */
  get json(): IpRangeJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
