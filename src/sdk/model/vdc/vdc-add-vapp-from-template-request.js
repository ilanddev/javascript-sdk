"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var template_vm_config_1 = require("./template-vm-config");
/**
 * Vdc add vapp from template request.
 */
/* istanbul ignore next: autogenerated */
var VdcAddVappFromTemplateRequest = (function () {
    function VdcAddVappFromTemplateRequest(firstParam, name, description, vms) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                vapp_template_uuid: firstParam,
                name: name,
                description: description,
                vms: vms
            };
        }
        else if (firstParam instanceof VdcAddVappFromTemplateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    Object.defineProperty(VdcAddVappFromTemplateRequest.prototype, "vappTemplateUuid", {
        /**
         * Get vapp template uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.vapp_template_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VdcAddVappFromTemplateRequest.prototype, "name", {
        /**
         * Get name.
         * @returns {string}
         */
        get: function () {
            return this._json.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VdcAddVappFromTemplateRequest.prototype, "description", {
        /**
         * Get description.
         * @returns {string}
         */
        get: function () {
            return this._json.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VdcAddVappFromTemplateRequest.prototype, "vms", {
        /**
         * Get vms.
         * @returns {Array<TemplateVmConfig>}
         */
        get: function () {
            return this._json.vms.map(function (vm) {
                return new template_vm_config_1.TemplateVmConfig(vm);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VdcAddVappFromTemplateRequest.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {VdcAddVappFromTemplateRequestJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    VdcAddVappFromTemplateRequest.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return VdcAddVappFromTemplateRequest;
}());
exports.VdcAddVappFromTemplateRequest = VdcAddVappFromTemplateRequest;
