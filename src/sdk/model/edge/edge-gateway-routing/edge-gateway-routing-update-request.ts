import { EdgeGatewayRoutingUpdateRequestJson } from './__json__/edge-gateway-routing-update-request-json';
import { RoutingGlobalConfigUpdateRequestJson } from './__json__/routing-global-config-update-request-json';
import { RoutingStaticConfigUpdateRequestJson } from './__json__/routing-static-config-update-request-json';
import { RoutingOSPFConfigUpdateRequestJson } from './__json__/routing-ospf-config-update-request-json';
import { RoutingBGPConfigUpdateRequestJson } from './__json__/routing-bgp-config-update-request-json';
import { RoutingGlobalConfigUpdateRequest } from './routing-global-config-update-request';
import { RoutingStaticConfigUpdateRequest } from './routing-static-config-update-request';
import { RoutingOSPFConfigUpdateRequest } from './routing-ospf-config-update-request';
import { RoutingBGPConfigUpdateRequest } from './routing-bgp-config-update-request';

/**
 * Edge Gateway Routing Update Request
 */
/* istanbul ignore next: autogenerated */
export class EdgeGatewayRoutingUpdateRequest {

  private readonly _json: EdgeGatewayRoutingUpdateRequestJson;

  constructor(edgeGatewayRoutingUpdateRequest: EdgeGatewayRoutingUpdateRequest);
  constructor(edgeGatewayRoutingUpdateRequestJson: EdgeGatewayRoutingUpdateRequestJson);
  constructor(enabled: boolean, routingGlobalConfig: RoutingGlobalConfigUpdateRequestJson,
              routingStaticConfig: RoutingStaticConfigUpdateRequestJson,
              routingOspfConfig: RoutingOSPFConfigUpdateRequestJson,
              routingBgpConfig: RoutingBGPConfigUpdateRequestJson);
  constructor(firstParam: boolean | EdgeGatewayRoutingUpdateRequest | EdgeGatewayRoutingUpdateRequestJson,
              routingGlobalConfig?: RoutingGlobalConfigUpdateRequestJson,
              routingStaticConfig?: RoutingStaticConfigUpdateRequestJson,
              routingOspfConfig?: RoutingOSPFConfigUpdateRequestJson,
              routingBgpConfig?: RoutingBGPConfigUpdateRequestJson) {
    if (typeof firstParam === 'boolean') {
      // Parameters constructor
      this._json = {
        enabled: firstParam,
        routing_global_config: routingGlobalConfig,
        routing_static_config: routingStaticConfig,
        routing_ospf_config: routingOspfConfig,
        routing_bgp_config: routingBgpConfig
      } as EdgeGatewayRoutingUpdateRequestJson;
    } else if (firstParam instanceof EdgeGatewayRoutingUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as EdgeGatewayRoutingUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as EdgeGatewayRoutingUpdateRequestJson;
    }
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get routing global config.
   * @returns {RoutingGlobalConfigUpdateRequest}
   */
  get routingGlobalConfig(): RoutingGlobalConfigUpdateRequest {
    return new RoutingGlobalConfigUpdateRequest(this._json.routing_global_config);
  }

  /**
   * Get routing static config.
   * @returns {RoutingStaticConfigUpdateRequest}
   */
  get routingStaticConfig(): RoutingStaticConfigUpdateRequest {
    return new RoutingStaticConfigUpdateRequest(this._json.routing_static_config);
  }

  /**
   * Get routing ospf config.
   * @returns {RoutingOSPFConfigUpdateRequest}
   */
  get routingOspfConfig(): RoutingOSPFConfigUpdateRequest {
    return new RoutingOSPFConfigUpdateRequest(this._json.routing_ospf_config);
  }

  /**
   * Get routing bgp config.
   * @returns {RoutingBGPConfigUpdateRequest}
   */
  get routingBgpConfig(): RoutingBGPConfigUpdateRequest {
    return new RoutingBGPConfigUpdateRequest(this._json.routing_bgp_config);
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeGatewayRoutingUpdateRequestJson}
   */
  get json(): EdgeGatewayRoutingUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
