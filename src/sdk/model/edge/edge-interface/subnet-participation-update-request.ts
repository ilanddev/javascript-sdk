import { SubnetParticipationUpdateRequestJson } from './__json__/subnet-participation-update-request-json';

/**
 * Subnet Participation Update Request.
 */
/* istanbul ignore next: autogenerated */
export class SubnetParticipationUpdateRequest {

  private readonly _json: SubnetParticipationUpdateRequestJson;

  constructor(subnetParticipationUpdateRequest: SubnetParticipationUpdateRequest);
  constructor(subnetParticipationUpdateRequestJson: SubnetParticipationUpdateRequestJson);
  constructor(gateway: string, netmask: string, ipAddress: string);
  constructor(firstParam: string | SubnetParticipationUpdateRequest | SubnetParticipationUpdateRequestJson,
              netmask?: string, ipAddress?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        gateway: firstParam,
        netmask: netmask,
        ip_address: ipAddress
      } as SubnetParticipationUpdateRequestJson;
    } else if (firstParam instanceof SubnetParticipationUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as SubnetParticipationUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as SubnetParticipationUpdateRequestJson;
    }
  }

  /**
   * Get gateway.
   * @returns {string}
   */
  get gateway(): string {
    return this._json.gateway;
  }

  /**
   * Get netmask.
   * @returns {string}
   */
  get netmask(): string {
    return this._json.netmask;
  }

  /**
   * Get ip address.
   * @returns {string}
   */
  get ipAddress(): string {
    return this._json.ip_address;
  }

  /**
   * Get the json representation of this class.
   * @returns {SubnetParticipationUpdateRequestJson}
   */
  get json(): SubnetParticipationUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
