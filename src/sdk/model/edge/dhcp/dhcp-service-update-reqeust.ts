import { DHCPPoolUpdateRequestJson } from './__json__/dhcp-pool-update-request-json';
import { DhcpServiceUpdateRequestJson } from './__json__/dhcp-service-update-request-json';
import { DHCPPoolUpdateRequest } from './dhcp-pool-update-request';

/**
 * Dhcp Service Update Request.
 */
/* istanbul ignore next: autogenerated */
export class DhcpServiceUpdateRequest {

  private readonly _json: DhcpServiceUpdateRequestJson;

  constructor(dhcpServiceUpdateRequest: DhcpServiceUpdateRequest);
  constructor(dhcpServiceUpdateRequestJson: DhcpServiceUpdateRequestJson);
  constructor(edgeUuid: string, enabled: boolean, dhcpPools: Array<DHCPPoolUpdateRequestJson>);
  constructor(firstParam: string | DhcpServiceUpdateRequest | DhcpServiceUpdateRequestJson, enabled?: boolean,
              dhcpPools?: Array<DHCPPoolUpdateRequestJson>) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        edge_uuid: firstParam,
        enabled: enabled,
        dhcp_pools: dhcpPools
      } as DhcpServiceUpdateRequestJson;
    } else if (firstParam instanceof DhcpServiceUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as DhcpServiceUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as DhcpServiceUpdateRequestJson;
    }
  }

  /**
   * Get edge uuid.
   * @returns {string}
   */
  get edgeUuid(): string {
    return this._json.edge_uuid;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get dhcp pools.
   * @returns {Array<DHCPPoolUpdateRequest>}
   */
  get dhcpPools(): Array<DHCPPoolUpdateRequest> {
    return this._json.dhcp_pools.map(it => new DHCPPoolUpdateRequest(it));
  }

  /**
   * Get the json representation of this class.
   * @returns {DhcpServiceUpdateRequestJson}
   */
  get json(): DhcpServiceUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
