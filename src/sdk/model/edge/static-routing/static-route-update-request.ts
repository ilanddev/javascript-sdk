import { StaticRouteUpdateRequestJson } from './__json__/static-route-update-request-json';

/**
 * Static Route Update Request.
 */
/* istanbul ignore next: autogenerated */
export class StaticRouteUpdateRequest {

  private readonly _json: StaticRouteUpdateRequestJson;

  constructor(staticRouteUpdateRequest: StaticRouteUpdateRequest);
  constructor(staticRouteUpdateRequestJson: StaticRouteUpdateRequestJson);
  constructor(edgeUuid: string, idx: number, name: string, network: string, nextHopIP: string, interfaceType: string,
              _interface: string);
  constructor(firstParam: string | StaticRouteUpdateRequest | StaticRouteUpdateRequestJson, idx?: number,
              name?: string, network?: string, nextHopIP?: string, interfaceType?: string, _interface?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        edge_uuid: firstParam,
        idx: idx,
        name: name,
        network: network,
        next_hop_ip: nextHopIP,
        interface_type: interfaceType,
        interface: _interface
      } as StaticRouteUpdateRequestJson;
    } else if (firstParam instanceof StaticRouteUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as StaticRouteUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as StaticRouteUpdateRequestJson;
    }
  }

  /**
   * Get edge uuid.
   * @returns {string}
   */
  get edgeUuid(): string {
    return this._json.edge_uuid;
  }

  /**
   * Get idx.
   * @returns {number}
   */
  get idx(): number {
    return this._json.idx;
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get network.
   * @returns {string}
   */
  get network(): string {
    return this._json.network;
  }

  /**
   * Get next hop ip.
   * @returns {string}
   */
  get nextHopIP(): string {
    return this._json.next_hop_ip;
  }

  /**
   * Get interface type.
   * @returns {string}
   */
  get interfaceType(): string {
    return this._json.interface_type;
  }

  /**
   * Get interface.
   * @returns {string}
   */
  get interface(): string {
    return this._json.interface;
  }

  /**
   * Get the json representation of this class.
   * @returns {StaticRouteUpdateRequestJson}
   */
  get json(): StaticRouteUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
