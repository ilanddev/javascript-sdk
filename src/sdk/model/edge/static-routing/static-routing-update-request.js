"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var static_route_update_request_1 = require("./static-route-update-request");
/**
 * Static Routing Update Request.
 */
/* istanbul ignore next: autogenerated */
var StaticRoutingUpdateRequest = (function () {
    function StaticRoutingUpdateRequest(firstParam, enabled, routes) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                routes: routes
            };
        }
        else if (firstParam instanceof StaticRoutingUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    Object.defineProperty(StaticRoutingUpdateRequest.prototype, "edgeUuid", {
        /**
         * Get edge uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.edge_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StaticRoutingUpdateRequest.prototype, "enabled", {
        /**
         * Get enabled.
         * @returns {boolean}
         */
        get: function () {
            return this._json.enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StaticRoutingUpdateRequest.prototype, "routes", {
        /**
         * Get routes.
         * @returns {Array<StaticRouteUpdateRequest>}
         */
        get: function () {
            return this._json.routes.map(function (it) { return new static_route_update_request_1.StaticRouteUpdateRequest(it); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StaticRoutingUpdateRequest.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {StaticRoutingUpdateRequestJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    StaticRoutingUpdateRequest.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return StaticRoutingUpdateRequest;
}());
exports.StaticRoutingUpdateRequest = StaticRoutingUpdateRequest;
