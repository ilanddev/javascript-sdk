import { EdgeGatewayDhcpUpdateRequestJson } from './__json__/edge-gateway-dhcp-update-request-json';
import { EdgeGatewayDhcpStaticBindingJson } from './__json__/edge-gateway-dhcp-static-binding-json';
import { EdgeGatewayDhcpIpPoolJson } from './__json__/edge-gateway-dhcp-ip-pool-json';
import { EdgeGatewayDhcpLoggingJson } from './__json__/edge-gateway-dhcp-logging-json';
import { EdgeGatewayDhcpRelayJson } from './__json__/edge-gateway-dhcp-relay-json';
import { EdgeGatewayDhcpIpPool } from './edge-gateway-dhcp-ip-pool';
import { EdgeGatewayDhcpLogging } from './edge-gateway-dhcp-logging';
import { EdgeGatewayDhcpRelay } from './edge-gateway-dhcp-relay';
import { EdgeGatewayDhcpStaticBinding } from './edge-gateway-dhcp-static-binding';

/* istanbul ignore next: autogenerated */
export class EdgeGatewayDhcpUpdateRequest {
  private readonly _json: EdgeGatewayDhcpUpdateRequestJson;
  constructor(edgeGatewayDhcpUpdateRequest: EdgeGatewayDhcpUpdateRequest);
  constructor(edgeGatewayDhcpUpdateRequestJson: EdgeGatewayDhcpUpdateRequestJson);
  constructor(enabled: boolean,
              staticBindings: Array<EdgeGatewayDhcpStaticBindingJson>,
              ipPools: Array<EdgeGatewayDhcpIpPoolJson>,
              logging: EdgeGatewayDhcpLoggingJson,
              relay: EdgeGatewayDhcpRelayJson);
  constructor(firstParam: boolean | EdgeGatewayDhcpUpdateRequest | EdgeGatewayDhcpUpdateRequestJson,
              staticBindings?: Array<EdgeGatewayDhcpStaticBindingJson>,
              ipPools?: Array<EdgeGatewayDhcpIpPoolJson>,
              logging?: EdgeGatewayDhcpLoggingJson,
              relay?: EdgeGatewayDhcpRelayJson) {
    if (typeof firstParam === 'boolean') {
      // Parameters constructor
      this._json = {
        enabled: firstParam,
        static_bindings: staticBindings,
        ip_pools: ipPools,
        logging: logging,
        relay: relay
      } as EdgeGatewayDhcpUpdateRequestJson;
    } else if (firstParam instanceof EdgeGatewayDhcpUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as EdgeGatewayDhcpUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as EdgeGatewayDhcpUpdateRequestJson;
    }
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get static bindings.
   * @returns {Array<EdgeGatewayDhcpStaticBinding>}
   */
  get staticBindings(): Array<EdgeGatewayDhcpStaticBinding> {
    return this._json.static_bindings.map(it => new EdgeGatewayDhcpStaticBinding(it));
  }

  /**
   * Get ip pools.
   * @returns {Array<EdgeGatewayDhcpIpPool>}
   */
  get ipPools(): Array<EdgeGatewayDhcpIpPool> {
    return this._json.ip_pools.map(it => new EdgeGatewayDhcpIpPool(it));
  }

  /**
   * Get logging.
   * @returns {EdgeGatewayDhcpLogging}
   */
  get logging(): EdgeGatewayDhcpLogging {
    return new EdgeGatewayDhcpLogging(this._json.logging);
  }

  /**
   * Get relay.
   * @returns {EdgeGatewayDhcpRelay}
   */
  get relay(): EdgeGatewayDhcpRelay {
    return new EdgeGatewayDhcpRelay(this._json.relay);
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeGatewayDhcpUpdateRequestJson}
   */
  get json(): EdgeGatewayDhcpUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
