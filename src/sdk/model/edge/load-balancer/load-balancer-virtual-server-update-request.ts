import { LoadBalancerVirtualServerUpdateRequestJson }
from './__json__/load-balancer-virtual-server-update-request-json';
import { LoadBalancerVirtualServerServiceProfileUpdateRequestJson }
from './__json__/load-balancer-virtual-server-service-profile-update-request-json';
import { LoadBalancerVirtualServerServiceProfileUpdateRequest }
from './load-balancer-virtual-server-service-profile-update-request';

/**
 * Load Balancer Virtual Server Update Request.
 */
/* istanbul ignore next: autogenerated */
export class LoadBalancerVirtualServerUpdateRequest {

  private readonly _json: LoadBalancerVirtualServerUpdateRequestJson;

  constructor(loadBalancerVirtualServerUpdateRequest: LoadBalancerVirtualServerUpdateRequest);
  constructor(loadBalancerVirtualServerUpdateRequestJson: LoadBalancerVirtualServerUpdateRequestJson);
  constructor(name: string, enabled: boolean, description: string, ipAddress: string,
              serviceProfiles: Array<LoadBalancerVirtualServerServiceProfileUpdateRequestJson>,
              logging: boolean, pool: string, network: string);
  constructor(firstParam: string | LoadBalancerVirtualServerUpdateRequest | LoadBalancerVirtualServerUpdateRequestJson,
              enabled?: boolean, description?: string, ipAddress?: string,
              serviceProfiles?: Array<LoadBalancerVirtualServerServiceProfileUpdateRequestJson>, logging?: boolean,
              pool?: string, network?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        name: firstParam,
        enabled: enabled,
        description: description,
        ip_address: ipAddress,
        service_profiles: serviceProfiles,
        logging: logging,
        pool: pool,
        network: network
      } as LoadBalancerVirtualServerUpdateRequestJson;
    } else if (firstParam instanceof LoadBalancerVirtualServerUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as LoadBalancerVirtualServerUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as LoadBalancerVirtualServerUpdateRequestJson;
    }
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get ip address.
   * @returns {string}
   */
  get ipAddress(): string {
    return this._json.ip_address;
  }

  /**
   * Get service profiles.
   * @returns {Array<LoadBalancerVirtualServerServiceProfileUpdateRequest>}
   */
  get serviceProfiles(): Array<LoadBalancerVirtualServerServiceProfileUpdateRequest> {
    return this._json.service_profiles.map(it => new LoadBalancerVirtualServerServiceProfileUpdateRequest(it));
  }

  /**
   * Get logging.
   * @returns {boolean}
   */
  get logging(): boolean {
    return this._json.logging;
  }

  /**
   * Get pool.
   * @returns {string}
   */
  get pool(): string {
    return this._json.pool;
  }

  /**
   * Get network.
   * @returns {string}
   */
  get network(): string {
    return this._json.network;
  }

  /**
   * Get the json representation of this class.
   * @returns {LoadBalancerVirtualServerUpdateRequestJson}
   */
  get json(): LoadBalancerVirtualServerUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
