import { LoadBalancerPoolUpdateRequestJson } from './__json__/load-balancer-pool-update-request-json';
import { LoadBalancerPoolServicePortUpdateRequestJson }
from './__json__/load-balancer-pool-service-port-update-request-jston';
import { LoadBalancerPoolMemberUpdateRequestJson } from './__json__/load-balancer-pool-member-update-request-json';
import { LoadBalancerPoolServicePortUpdateRequest } from './load-balancer-pool-service-update-request';
import { LoadBalancerPoolMemberUpdateRequest } from './load-balancer-pool-member-update-request';

/**
 * Load Balancer Pool Update Request.
 */
/* istanbul ignore next: autogenerated */
export class LoadBalancerPoolUpdateRequest {

  private readonly _json: LoadBalancerPoolUpdateRequestJson;

  constructor(loadBalancerPoolUpdateRequest: LoadBalancerPoolUpdateRequest);
  constructor(loadBalancerPoolUpdateRequestJson: LoadBalancerPoolUpdateRequestJson);
  constructor(id: string, name: string, description: string,
              servicePorts: Array<LoadBalancerPoolServicePortUpdateRequestJson>,
              members: Array<LoadBalancerPoolMemberUpdateRequestJson>, operational: boolean, errorDetails: string);
  constructor(firstParam: string | LoadBalancerPoolUpdateRequest | LoadBalancerPoolUpdateRequestJson, name?: string,
              description?: string, servicePorts?: Array<LoadBalancerPoolServicePortUpdateRequestJson>,
              members?: Array<LoadBalancerPoolMemberUpdateRequestJson>, operational?: boolean, errorDetails?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        id: firstParam,
        name: name,
        description: description,
        service_ports: servicePorts,
        members: members,
        operational: operational,
        error_details: errorDetails
      } as LoadBalancerPoolUpdateRequestJson;
    } else if (firstParam instanceof LoadBalancerPoolUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as LoadBalancerPoolUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as LoadBalancerPoolUpdateRequestJson;
    }
  }

  /**
   * Get id.
   * @returns {string}
   */
  get id(): string {
    return this._json.id;
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get service ports.
   * @returns {Array<LoadBalancerPoolServicePortUpdateRequest>}
   */
  get servicePorts(): Array<LoadBalancerPoolServicePortUpdateRequest> {
    return this._json.service_ports.map(it => new LoadBalancerPoolServicePortUpdateRequest(it));
  }

  /**
   * Get members.
   * @returns {Array<LoadBalancerPoolMemberUpdateRequest>}
   */
  get members(): Array<LoadBalancerPoolMemberUpdateRequest> {
    return this._json.members.map(it => new LoadBalancerPoolMemberUpdateRequest(it));
  }

  /**
   * Get operational.
   * @returns {boolean}
   */
  get operational(): boolean {
    return this._json.operational;
  }

  /**
   * Get error details.
   * @returns {string}
   */
  get errorDetails(): string {
    return this._json.error_details;
  }

  /**
   * Get the json representation of this class.
   * @returns {LoadBalancerPoolUpdateRequestJson}
   */
  get json(): LoadBalancerPoolUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
