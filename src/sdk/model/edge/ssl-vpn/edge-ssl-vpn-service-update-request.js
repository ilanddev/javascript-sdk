"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var edge_ssl_vpn_client_install_package_update_request_1 = require("./edge-ssl-vpn-client-install-package-update-request");
var edge_ssl_vpn_ip_pool_update_request_1 = require("./edge-ssl-vpn-ip-pool-update-request");
var edge_ssl_vpn_local_authentication_server_update_request_1 = require("./edge-ssl-vpn-local-authentication-server-update-request");
var edge_ssl_vpn_private_network_update_request_1 = require("./edge-ssl-vpn-private-network-update-request");
var edge_ssl_vpn_user_update_request_1 = require("./edge-ssl-vpn-user-update-request");
var edge_ssl_vpn_authentication_update_request_1 = require("./edge-ssl-vpn-authentication-update-request");
/* istanbul ignore next: autogenerated */
var EdgeSslVpnServiceUpdateRequest = (function () {
    function EdgeSslVpnServiceUpdateRequest(firstParam, enabled, logEnabled, logLevel, ip, port, cipherList, privateNetworks, users, ipPools, installPackages, authenticationConfig, authentication) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                edge_uuid: firstParam,
                enabled: enabled,
                log_enabled: logEnabled,
                log_level: logLevel,
                ip: ip,
                port: port,
                cipher_list: cipherList,
                private_networks: privateNetworks,
                users: users,
                ip_pools: ipPools,
                install_packages: installPackages,
                authentication_config: authenticationConfig,
                authentication: authentication
            };
        }
        else if (firstParam instanceof EdgeSslVpnServiceUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "edgeUuid", {
        /**
         * Get edge uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.edge_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "enabled", {
        /**
         * Get enabled.
         * @returns {boolean}
         */
        get: function () {
            return this._json.enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "logEnabled", {
        /**
         * Get log enabled.
         * @returns {boolean}
         */
        get: function () {
            return this._json.log_enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "logLevel", {
        /**
         * Get log level.
         * @returns {string}
         */
        get: function () {
            return this._json.log_level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "ip", {
        /**
         * Get ip.
         * @returns {string}
         */
        get: function () {
            return this._json.ip;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "port", {
        /**
         * Get port.
         * @returns {number}
         */
        get: function () {
            return this._json.port;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "cipherList", {
        /**
         * Get cipher list.
         * @returns {Array<string>}
         */
        get: function () {
            return this._json.cipher_list;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "privateNetworks", {
        /**
         * Get private networks.
         * @returns {Array<EdgeSslVpnPrivateNetworkUpdateRequest>}
         */
        get: function () {
            return this._json.private_networks.map(function (req) { return new edge_ssl_vpn_private_network_update_request_1.EdgeSslVpnPrivateNetworkUpdateRequest(req); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "users", {
        /**
         * Get users.
         * @returns {Array<EdgeSslVpnUserUpdateRequest>}
         */
        get: function () {
            return this._json.users.map(function (req) { return new edge_ssl_vpn_user_update_request_1.EdgeSslVpnUserUpdateRequest(req); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "ipPools", {
        /**
         * Get ip pools.
         * @returns {Array<EdgeSslVpnIpPoolUpdateRequest>}
         */
        get: function () {
            return this._json.ip_pools.map(function (req) { return new edge_ssl_vpn_ip_pool_update_request_1.EdgeSslVpnIpPoolUpdateRequest(req); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "installPackages", {
        /**
         * Get install packages.
         * @returns {Array<EdgeSslVpnClientInstallPackageUpdateRequest>}
         */
        get: function () {
            return this._json.install_packages.map(function (req) { return new edge_ssl_vpn_client_install_package_update_request_1.EdgeSslVpnClientInstallPackageUpdateRequest(req); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "authenticationConfig", {
        /**
         * Get authentication config.
         * @returns {EdgeSslVpnLocalAuthenticationServerUpdateRequest}
         */
        get: function () {
            return new edge_ssl_vpn_local_authentication_server_update_request_1.EdgeSslVpnLocalAuthenticationServerUpdateRequest(this._json.authentication_config);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "authentication", {
        /**
         * Get authentication.
         * @returns {EdgeSslVpnAuthenticationUpdateRequest}
         */
        get: function () {
            return new edge_ssl_vpn_authentication_update_request_1.EdgeSslVpnAuthenticationUpdateRequest(this._json.authentication);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EdgeSslVpnServiceUpdateRequest.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {EdgeSslVpnServiceUpdateRequestJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    EdgeSslVpnServiceUpdateRequest.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return EdgeSslVpnServiceUpdateRequest;
}());
exports.EdgeSslVpnServiceUpdateRequest = EdgeSslVpnServiceUpdateRequest;
