import { EdgeIpSecVpnServiceUpdateRequestJson } from './__json__/edge-ip-sec-vpn-service-update-request-json';
import { LoggingSettingsRequestJson } from './__json__/logging-settings-request-json';
import { GlobalSettingsRequestJson } from './__json__/global-settings-request-json';
import { IpSecVpnSiteRequestJson } from './__json__/ip-sec-vpn-site-request-json';

/**
 * Edge Ip Sec Vpn Service Update Request.
 */
/* istanbul ignore next: autogenerated */
export class EdgeIpSecVpnServiceUpdateRequest {

  private readonly _json: EdgeIpSecVpnServiceUpdateRequestJson;

  constructor(edgeIpSecVpnServiceUpdateRequest: EdgeIpSecVpnServiceUpdateRequest);
  constructor(edgeIpSecVpnServiceUpdateRequestJson: EdgeIpSecVpnServiceUpdateRequestJson);
  constructor(enabled: boolean, loggingSettings: LoggingSettingsRequestJson,
              globalSettings: GlobalSettingsRequestJson, sites: Array<IpSecVpnSiteRequestJson>);
  constructor(firstParam: boolean | EdgeIpSecVpnServiceUpdateRequest | EdgeIpSecVpnServiceUpdateRequestJson,
              loggingSettings?: LoggingSettingsRequestJson, globalSettings?: GlobalSettingsRequestJson,
              sites?: Array<IpSecVpnSiteRequestJson>) {
    if (typeof firstParam === 'boolean') {
      // Parameters constructor
      this._json = {
        enabled: firstParam,
        logging_settings: loggingSettings,
        global_settings: globalSettings,
        sites: sites
      } as EdgeIpSecVpnServiceUpdateRequestJson;
    } else if (firstParam instanceof EdgeIpSecVpnServiceUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as EdgeIpSecVpnServiceUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as EdgeIpSecVpnServiceUpdateRequestJson;
    }
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get logging settings.
   * @returns {LoggingSettingsRequestJson}
   */
  get loggingSettings(): LoggingSettingsRequestJson {
    return this._json.logging_settings;
  }

  /**
   * Get global settings.
   * @returns {GlobalSettingsRequestJson}
   */
  get globalSettings(): GlobalSettingsRequestJson {
    return this._json.global_settings;
  }

  /**
   * Get sites.
   * @returns {Array<IpSecVpnSiteRequestJson>}
   */
  get sites(): Array<IpSecVpnSiteRequestJson> {
    return this._json.sites;
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeIpSecVpnServiceUpdateRequestJson}
   */
  get json(): EdgeIpSecVpnServiceUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
