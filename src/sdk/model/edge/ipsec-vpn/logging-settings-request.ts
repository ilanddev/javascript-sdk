import { LoggingSettingsRequestJson } from './__json__/logging-settings-request-json';

/**
 * Logging Settings Request
 */
/* istanbul ignore next: autogenerated */
export class LoggingSettingsRequest {

  private readonly _json: LoggingSettingsRequestJson;

  constructor(loggingSettingsRequest: LoggingSettingsRequest);
  constructor(loggingSettingsRequestJson: LoggingSettingsRequestJson);
  constructor(logLevel: string, enabled: boolean);
  constructor(firstParam: string | LoggingSettingsRequest | LoggingSettingsRequestJson, enabled?: boolean) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        log_level: firstParam,
        enabled: enabled
      } as LoggingSettingsRequestJson;
    } else if (firstParam instanceof LoggingSettingsRequest) {
      // Copy constructor
      this._json = (firstParam as LoggingSettingsRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as LoggingSettingsRequestJson;
    }
  }

  /**
   * Get log level.
   * @returns {string}
   */
  get logLevel(): string {
    return this._json.log_level;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get the json representation of this class.
   * @returns {LoggingSettingsRequestJson}
   */
  get json(): LoggingSettingsRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
