"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var template_disk_configuration_1 = require("./template-disk-configuration");
var template_vnic_configuration_1 = require("./template-vnic-configuration");
/**
 * VM Template Configuration Response.
 */
/* istanbul ignore next: autogenerated */
var VmTemplateConfiguration = (function () {
    function VmTemplateConfiguration(_json) {
        this._json = _json;
    }
    Object.defineProperty(VmTemplateConfiguration.prototype, "uuid", {
        /**
         * Get uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "name", {
        /**
         * Get name.
         * @returns {string}
         */
        get: function () {
            return this._json.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "description", {
        /**
         * Get description.
         * @returns {string}
         */
        get: function () {
            return this._json.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "memoryInBytes", {
        /**
         * Get memory in bytes.
         * @returns {number}
         */
        get: function () {
            return this._json.memory_in_bytes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "numberOfCpus", {
        /**
         * Get number of cpus.
         * @returns {number}
         */
        get: function () {
            return this._json.number_of_cpus;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "numberOfCoresPerSocket", {
        /**
         * Get number of cores per socket.
         * @returns {number}
         */
        get: function () {
            return this._json.number_of_cores_per_socket;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "storageProfileUuid", {
        /**
         * Get storage profile uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.storage_profile_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "hardwareVersion", {
        /**
         * Get hardware version.
         * @returns {string}
         */
        get: function () {
            return this._json.hardware_version;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "operatingSystemVersion", {
        /**
         * Get operating system version.
         * @returns {string}
         */
        get: function () {
            return this._json.operating_system_version;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "exposeCpuVirtualization", {
        /**
         * Get expose cpu virtualization.
         * @returns {boolean}
         */
        get: function () {
            return this._json.expose_cpu_virtualization;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "computerName", {
        /**
         * Get computer name.
         * @returns {string}
         */
        get: function () {
            return this._json.computer_name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "disks", {
        /**
         * Get disks.
         * @returns {Array<TemplateDiskConfiguration>}
         */
        get: function () {
            return this._json.disks.map(function (tplDiskConfig) { return new template_disk_configuration_1.TemplateDiskConfiguration(tplDiskConfig); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "vnics", {
        /**
         * Get vnics.
         * @returns {Array<TemplateVnicConfiguration>}
         */
        get: function () {
            return this._json.vnics.map(function (tplVnicConfig) { return new template_vnic_configuration_1.TemplateVnicConfiguration(tplVnicConfig); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VmTemplateConfiguration.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {VmTemplateConfigurationJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    VmTemplateConfiguration.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return VmTemplateConfiguration;
}());
exports.VmTemplateConfiguration = VmTemplateConfiguration;
