/* istanbul ignore next: autogenerated */
import { OktaIdentityProviderCreateRequestJson } from './__json__/okta-identity-provider-create-request--json';

/**
 * Okta Identity Provider Create Request.
 */
export class OktaIdentityProviderCreateRequest {

  private readonly _json: OktaIdentityProviderCreateRequestJson;

  constructor(OktaIdentityProviderCreateRequest: OktaIdentityProviderCreateRequest);
  constructor(OktaIdentityProviderCreateRequestJson: OktaIdentityProviderCreateRequestJson);
  constructor(enforceSso: boolean, enabled: boolean, singleSignOnServiceUrl: string);
  constructor(firstParam: boolean | OktaIdentityProviderCreateRequest | OktaIdentityProviderCreateRequestJson,
              enabled?: boolean, singleSignOnServiceUrl?: string) {
    if (typeof firstParam === 'boolean') {
      // Parameters constructor
      this._json = {
        enforce_sso: firstParam,
        enabled: enabled,
        single_sign_on_service_url: singleSignOnServiceUrl
      } as OktaIdentityProviderCreateRequestJson;
    } else if (firstParam instanceof OktaIdentityProviderCreateRequest) {
      // Copy constructor
      this._json = (firstParam as OktaIdentityProviderCreateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as OktaIdentityProviderCreateRequestJson;
    }
  }

  /**
   * Get enforce sso.
   * @returns {boolean}
   */
  get enforceSso(): boolean {
    return this._json.enforce_sso;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get single sign on service url.
   * @returns {string}
   */
  get singleSignOnServiceUrl(): string {
    return this._json.single_sign_on_service_url;
  }

  /**
   * Get the json representation of this class.
   * @returns {OktaIdentityProviderCreateRequestJson}
   */
  get json(): OktaIdentityProviderCreateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
