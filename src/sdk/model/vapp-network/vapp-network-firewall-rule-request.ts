import { VappNetworkFirewallRuleRequestJson } from './__json__/vapp-network-firewall-rule-request-json';

/* istanbul ignore next: autogenerated */
export class VappNetworkFirewallRuleRequest {

  private readonly _json: VappNetworkFirewallRuleRequestJson;

  constructor(vappNetworkFirewallRuleRequest: VappNetworkFirewallRuleRequest);
  constructor(vappNetworkFirewallRuleRequestJson: VappNetworkFirewallRuleRequestJson);
  constructor(description: string, destinationIp: string, destinationPortRange: string, direction: string,
              icmpSubType: string, policy: string, port: number, protocols: Array<string>, sourceIp: string,
              sourcePort: number, sourcePortRange: string, loggingEnabled: boolean, enabled: boolean,
              matchOnTranslate: boolean);
  constructor(firstParam: string | VappNetworkFirewallRuleRequest | VappNetworkFirewallRuleRequestJson,
              destinationIp?: string, destinationPortRange?: string, direction?: string, icmpSubType?: string,
              policy?: string, port?: number, protocols?: Array<string>, sourceIp?: string, sourcePort?: number,
              sourcePortRange?: string, loggingEnabled?: boolean, enabled?: boolean, matchOnTranslate?: boolean) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        description: firstParam,
        destination_ip: destinationIp,
        destination_port_range: destinationPortRange,
        direction: direction,
        icmp_sub_type: icmpSubType,
        policy: policy,
        port: port,
        protocols: protocols,
        source_ip: sourceIp,
        source_port: sourcePort,
        source_port_range: sourcePortRange,
        logging_enabled: loggingEnabled,
        enabled: enabled,
        match_on_translate: matchOnTranslate
      } as VappNetworkFirewallRuleRequestJson;
    } else if (firstParam instanceof VappNetworkFirewallRuleRequest) {
      // Copy constructor
      this._json = (firstParam as VappNetworkFirewallRuleRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VappNetworkFirewallRuleRequestJson;
    }
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get destination ip.
   * @returns {string}
   */
  get destinationIp(): string {
    return this._json.destination_ip;
  }

  /**
   * Get destination port range.
   * @returns {string}
   */
  get destinationPortRange(): string {
    return this._json.destination_port_range;
  }

  /**
   * Get direction.
   * @returns {string}
   */
  get direction(): string {
    return this._json.direction;
  }

  /**
   * Get icmp sub type.
   * @returns {string}
   */
  get icmpSubType(): string {
    return this._json.icmp_sub_type;
  }

  /**
   * Get policy.
   * @returns {string}
   */
  get policy(): string {
    return this._json.policy;
  }

  /**
   * Get port.
   * @returns {number}
   */
  get port(): number {
    return this._json.port;
  }

  /**
   * Get protocols.
   * @returns {Array<string>}
   */
  get protocols(): Array<string> {
    return this._json.protocols;
  }

  /**
   * Get source ip.
   * @returns {string}
   */
  get sourceIp(): string {
    return this._json.source_ip;
  }

  /**
   * Get source port.
   * @returns {number}
   */
  get sourcePort(): number {
    return this._json.source_port;
  }

  /**
   * Get source port range.
   * @returns {string}
   */
  get sourcePortRange(): string {
    return this._json.source_port_range;
  }

  /**
   * Get logging enabled.
   * @returns {boolean}
   */
  get loggingEnabled(): boolean {
    return this._json.logging_enabled;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get match on translate.
   * @returns {boolean}
   */
  get matchOnTranslate(): boolean {
    return this._json.match_on_translate;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappNetworkFirewallRuleRequestJson}
   */
  get json(): VappNetworkFirewallRuleRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
