"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* istanbul ignore next: autogenerated */
var VappNetworkPortForwardNATRuleRequest = (function () {
    function VappNetworkPortForwardNATRuleRequest(firstParam, forwardToPort, protocol, vmInterface, vmLocalId) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                external_port: firstParam,
                forward_to_port: forwardToPort,
                protocol: protocol,
                vm_interface: vmInterface,
                vm_local_id: vmLocalId
            };
        }
        else if (firstParam instanceof VappNetworkPortForwardNATRuleRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "externalPort", {
        /**
         * Get external port.
         * @returns {string}
         */
        get: function () {
            return this._json.external_port;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "forwardToPort", {
        /**
         * Get forward to port.
         * @returns {string}
         */
        get: function () {
            return this._json.forward_to_port;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "protocol", {
        /**
         * Get protocol.
         * @returns {string}
         */
        get: function () {
            return this._json.protocol;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "vmInterface", {
        /**
         * Get vm interface.
         * @returns {string}
         */
        get: function () {
            return this._json.vm_interface;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "vmLocalId", {
        /**
         * Get vm local id.
         * @returns {string}
         */
        get: function () {
            return this._json.vm_local_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkPortForwardNATRuleRequest.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {VappNetworkPortForwardNATRuleRequestJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    VappNetworkPortForwardNATRuleRequest.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return VappNetworkPortForwardNATRuleRequest;
}());
exports.VappNetworkPortForwardNATRuleRequest = VappNetworkPortForwardNATRuleRequest;
