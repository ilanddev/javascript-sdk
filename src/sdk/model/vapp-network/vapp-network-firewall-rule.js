"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* istanbul ignore next: autogenerated */
var VappNetworkFirewallRule = (function () {
    function VappNetworkFirewallRule(_json) {
        this._json = _json;
    }
    Object.defineProperty(VappNetworkFirewallRule.prototype, "description", {
        /**
         * Get description.
         * @returns {string}
         */
        get: function () {
            return this._json.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "destinationIp", {
        /**
         * Get destination ip.
         * @returns {string}
         */
        get: function () {
            return this._json.destination_ip;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "destinationPortRange", {
        /**
         * Get destination port range.
         * @returns {string}
         */
        get: function () {
            return this._json.destination_port_range;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "direction", {
        /**
         * Get direction.
         * @returns {string}
         */
        get: function () {
            return this._json.direction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "icmpSubType", {
        /**
         * Get icmp sub type.
         * @returns {string}
         */
        get: function () {
            return this._json.icmp_sub_type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "id", {
        /**
         * Get id.
         * @returns {string}
         */
        get: function () {
            return this._json.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "policy", {
        /**
         * Get policy.
         * @returns {string}
         */
        get: function () {
            return this._json.policy;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "port", {
        /**
         * Get port.
         * @returns {number}
         */
        get: function () {
            return this._json.port;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "protocols", {
        /**
         * Get protocols.
         * @returns {Array<string>}
         */
        get: function () {
            return this._json.protocols;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "sourceIp", {
        /**
         * Get source ip.
         * @returns {string}
         */
        get: function () {
            return this._json.source_ip;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "sourcePort", {
        /**
         * Get source port.
         * @returns {number}
         */
        get: function () {
            return this._json.source_port;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "sourcePortRange", {
        /**
         * Get source port range.
         * @returns {string}
         */
        get: function () {
            return this._json.source_port_range;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "loggingEnabled", {
        /**
         * Get logging enabled.
         * @returns {boolean}
         */
        get: function () {
            return this._json.logging_enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "enabled", {
        /**
         * Get enabled.
         * @returns {boolean}
         */
        get: function () {
            return this._json.enabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "matchOnTranslate", {
        /**
         * Get match on translate.
         * @returns {boolean}
         */
        get: function () {
            return this._json.match_on_translate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "ruleIndex", {
        /**
         * Get rule index.
         * @returns {number}
         */
        get: function () {
            return this._json.rule_index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkFirewallRule.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {VappNetworkFirewallRuleJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    VappNetworkFirewallRule.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return VappNetworkFirewallRule;
}());
exports.VappNetworkFirewallRule = VappNetworkFirewallRule;
