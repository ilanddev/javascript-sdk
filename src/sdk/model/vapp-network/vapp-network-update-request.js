"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ip_range_1 = require("../common/ip-range/ip-range");
/* istanbul ignore next: autogenerated */
var VappNetworkUpdateRequest = (function () {
    function VappNetworkUpdateRequest(firstParam, description, name, primaryDns, secondaryDns, dnsSuffix, inherited, ipRanges, routerExternalIp, fenceMode) {
        if (typeof firstParam === 'string') {
            // Parameters constructor
            this._json = {
                fence_mode: fenceMode,
                parent_network_uuid: firstParam,
                description: description,
                name: name,
                primary_dns: primaryDns,
                secondary_dns: secondaryDns,
                dns_suffix: dnsSuffix,
                inherited: inherited,
                ip_ranges: ipRanges,
                router_external_ip: routerExternalIp
            };
        }
        else if (firstParam instanceof VappNetworkUpdateRequest) {
            // Copy constructor
            this._json = firstParam.json;
        }
        else {
            // Json or empty constructor
            this._json = (firstParam || {});
        }
    }
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "fenceMode", {
        /**
         * Get fence mode.
         * @returns {FenceModeType}
         */
        get: function () {
            return this._json.fence_mode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "parentNetworkUuid", {
        /**
         * Get parent network uuid.
         * @returns {string}
         */
        get: function () {
            return this._json.parent_network_uuid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "description", {
        /**
         * Get description.
         * @returns {string}
         */
        get: function () {
            return this._json.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "name", {
        /**
         * Get name.
         * @returns {string}
         */
        get: function () {
            return this._json.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "primaryDns", {
        /**
         * Get primary dns.
         * @returns {string}
         */
        get: function () {
            return this._json.primary_dns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "secondaryDns", {
        /**
         * Get secondary dns.
         * @returns {string}
         */
        get: function () {
            return this._json.secondary_dns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "dnsSuffix", {
        /**
         * Get dns suffix.
         * @returns {string}
         */
        get: function () {
            return this._json.dns_suffix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "inherited", {
        /**
         * Get inherited.
         * @returns {boolean}
         */
        get: function () {
            return this._json.inherited;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "ipRanges", {
        /**
         * Get ip ranges.
         * @returns {Array<IpRange>}
         */
        get: function () {
            return this._json.ip_ranges.map(function (range) {
                return new ip_range_1.IpRange(range);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "routerExternalIp", {
        /**
         * Get router external ip.
         * @returns {string}
         */
        get: function () {
            return this._json.router_external_ip;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VappNetworkUpdateRequest.prototype, "json", {
        /**
         * Get the json representation of this class.
         * @returns {VappNetworkUpdateRequestJson}
         */
        get: function () {
            return Object.assign({}, this._json);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the string representation of this class.
     * @returns {string}
     */
    VappNetworkUpdateRequest.prototype.toString = function () {
        return JSON.stringify(this._json, undefined, 2);
    };
    return VappNetworkUpdateRequest;
}());
exports.VappNetworkUpdateRequest = VappNetworkUpdateRequest;
