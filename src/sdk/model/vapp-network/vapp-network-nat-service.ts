import { VappNetworkIpTranslationNATRule } from './vapp-network-ip-translation-nat-rule';
import { VappNetworkPortForwardNATRule } from './vapp-network-port-forward-nat-rule';
import { VappNetworkNATServiceJson } from './__json__/vapp-network-nat-service-json';

/* istanbul ignore next: autogenerated */
export class VappNetworkNATService {

  constructor(private _json: VappNetworkNATServiceJson) {
  }

  /**
   * Get vapp uuid.
   * @returns {string}
   */
  get vappUuid(): string {
    return this._json.vapp_uuid;
  }

  /**
   * Get network name.
   * @returns {string}
   */
  get networkName(): string {
    return this._json.network_name;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get type.
   * @returns {string}
   */
  get type(): string {
    return this._json.type;
  }

  /**
   * Get ip translation rules.
   * @returns {Array<VappNetworkIpTranslationNATRule>}
   */
  get ipTranslationRules(): Array<VappNetworkIpTranslationNATRule> {
    return this._json.ip_translation_rules.map((rule) => {
      return new VappNetworkIpTranslationNATRule(rule);
    });
  }

  /**
   * Get port forwarding rules.
   * @returns {Array<VappNetworkPortForwardNATRule>}
   */
  get portForwardingRules(): Array<VappNetworkPortForwardNATRule> {
    return this._json.port_forwarding_rules.map((rule) => {
      return new VappNetworkPortForwardNATRule(rule);
    });
  }

  /**
   * Get enable ip masquerade.
   * @returns {boolean}
   */
  get enableIpMasquerade(): boolean {
    return this._json.enable_ip_masquerade;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappNetworkNATServiceJson}
   */
  get json(): VappNetworkNATServiceJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
