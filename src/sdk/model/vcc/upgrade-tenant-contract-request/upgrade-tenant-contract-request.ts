import { UpdateTenantContractRequestJson } from './__json__/upgrade-tenant-contract-request-json';

/**
 *  Update Tenant Contract Request.
 */
/* istanbul ignore next: autogenerated */
export class UpdateTenantContractRequest {

  private readonly _json: UpdateTenantContractRequestJson;

  constructor(updateTenantContractRequest: UpdateTenantContractRequest);
  constructor(updateTenantContractRequestJson: UpdateTenantContractRequestJson);
  constructor(additionalStorageInGb: number);
  constructor(firstParam: number | UpdateTenantContractRequest | UpdateTenantContractRequestJson) {
    if (typeof firstParam === 'number') {
      // Parameters constructor
      this._json = {
        additional_storage_in_gb: firstParam
      } as UpdateTenantContractRequestJson;
    } else if (firstParam instanceof UpdateTenantContractRequest) {
      // Copy constructor
      this._json = (firstParam as UpdateTenantContractRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as UpdateTenantContractRequestJson;
    }
  }

  /**
   * Get additional storage in gb.
   * @returns {number}
   */
  get additionalStorageInGb(): number {
    return this._json.additional_storage_in_gb;
  }

  /**
   * Get the json representation of this class.
   * @returns {UpdateTenantContractRequestJson}
   */
  get json(): UpdateTenantContractRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
